name: ci

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      terraform:
        description: Run terraform
        type: boolean
        required: false
        default: false
      yamllint:
        description: Run yamllint
        type: boolean
        required: false
        default: false

permissions:
  contents: read # required to checkout the repository

concurrency:
  group: ci

jobs:
  what-changed:
    name: what changed
    runs-on: ubuntu-latest
    outputs:
      terraform: ${{ steps.changed-directories.outputs.terraform_any_changed }}
      yaml: ${{ steps.changed-directories.outputs.yaml_any_changed }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: changed directories
        id: changed-directories
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            terraform:
              - platform/terraform/**
            yaml:
              - '**.yaml'

  yamllint:
    if: ${{ needs.what-changed.outputs.yaml == 'true' || github.event.inputs.yamllint == 'true' }}
    name: yamllint
    runs-on: ubuntu-latest
    needs: what-changed
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: install yamllint
        run: pip install yamllint

      - name: run yamllint
        id: yamllint
        run: yamllint .

  terraform:
    if: ${{ needs.what-changed.outputs.terraform == 'true' || github.event.inputs.terraform == 'true' }}
    name: terraform
    runs-on: ubuntu-latest
    needs: what-changed
    defaults:
      run:
        working-directory: platform/terraform
    env:
      TF_IN_AUTOMATION: "true"
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: fmt
        id: fmt
        run: terraform fmt -check

      - name: init
        id: init
        run: terraform init -upgrade -input=false

      - name: validate
        id: validate
        run: terraform validate -no-color

      - name: tflint setup
        uses: terraform-linters/setup-tflint@v4
        id: tflint-setup
        with:
          tflint_version: "latest"
          tflint_wrapper: "true"

      - name: tflint init
        id: tflint-init
        run: tflint --init

      - name: tflint check
        id: tflint-check
        run: tflint --var-file=tfvars/prod.tfvars
